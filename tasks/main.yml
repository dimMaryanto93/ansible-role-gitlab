---
# tasks file for ansible-role-gitlab-example
- name: Load a variable file based on the OS type
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - '{{ansible_os_family}}.yaml'
      paths:
        - 'vars'

- name: Requirement & Prequisites to install Gitlab
  block: 
    - name: Install dependencies on Ubuntu
      include_tasks: ubuntu/prerequisite.yaml
      when: ansible_os_family == 'Debian'

- name: Install Gitlab package
  block: 
    - name: Check if GitLab configuration file already exists.
      stat: 
        path: /etc/gitlab/gitlab.rb
      register: gitlab_config_file

    - name: Check if GitLab is already installed.
      stat: 
        path: /usr/bin/gitlab-ctl
      register: gitlab_file

    - name: Download GitLab repository installation script.
      get_url:
        url: "https://packages.gitlab.com/install/repositories/gitlab/{{ gitlab_package_name }}/{{ gitlab_script_name }}"
        dest: /tmp/gitlab.script.sh
        validate_certs: true
      when: not gitlab_file.stat.exists

    - name: Install GitLab repository.
      command: bash /tmp/gitlab.script.sh
      register: output
      when: not gitlab_file.stat.exists

    - name: Install Gitlab
      package:
        name: "{{ gitlab_package_name }}"
        state: latest
      when: not gitlab_file.stat.exists

- name: Post Install Gitlab package
  block:
    - name: Reconfigure GitLab (first run).
      command: gitlab-ctl reconfigure
      failed_when: false

    - name: get info init root password for gitlab
      shell: "cat /etc/gitlab/initial_root_password | grep 'Password: ' | awk '{print $2}'"
      register: init_root_password
      when: gitlab_root_password_print

    - name: Debug root password
      debug: 
        msg: "{{ init_root_password.stdout }}"
      when: gitlab_root_password_print

- name: Firewall config allow gitlab access outside
  block:
    - name: UFW config
      include_tasks: ubuntu/ufw-cmd.yaml
      when: ansible_os_family == 'Debian'
